<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY PRODUCT "Xenta OS">
<!ENTITY MINTVERSION "2.0 LTS">
<!ENTITY BOOKID "User_Guide">
<!ENTITY YEAR "2019">
<!ENTITY HOLDER "Xenta OS">
<!ENTITY EDITION "Xfce">
]>
<chapter id="software">
	<title>Manajemen Perangkat Lunak</title>
	 <para>
		Jika Anda telah menginstal Linux untuk pertama kalinya, mungkin Anda belum terbiasa dengan konsep pengorganisasian perangkat lunak ke dalam <wordasword>paket</wordasword>.
	</para>
	 <para>
		Dalam waktu dekat Anda mungkin terbiasa dengan manajemen paket dan menghargai keuntungan yang ditawarkannya dalam hal keamanan, kontrol, dan kemudahan penggunaan.
	</para>
	 <para>
		Kami telah mencoba membuatnya sehingga semua atau sebagian besar perangkat keras Anda terdeteksi dan driver diinstal secara otomatis sehingga komputer Anda akan bekerja otomatis tanpa melakukan install manual terlebih dahulu. Kami juga telah mencoba membuatnya sehingga Anda dapat melakukan banyak hal yang Anda inginkan tanpa harus mencari-cari perangkat lunak pihak ketiga di situs web. Anda mungkin telah memperhatikan bahwa instalasi Xenta OS Anda sudah memiliki office suite lengkap, solusi pengeditan gambar berkualitas profesional, IM dan klien IRC, pembakar disk, dan beberapa pemutar media (serta banyak aksesori dasar lainnya). Tenang, tidak apa-apa! Anda belum mencuri apa pun! Inilah yang dimaksud dengan perangkat lunak bebas! Dan hal yang benar-benar hebat tentang manajemen paket di Xenta OS dan umumnya adalah Anda tidak perlu mencari jauh-jauh untuk perangkat lunak tambahan, bahkan ketika saatnya tiba Anda menginginkan lebih banyak fungsionalitas dari sistem Xenta OS Anda.
	</para>
	 <para>
		Bagian ini dimaksudkan untuk menjelaskan cara kerja dan keuntungan kepada Anda. Akan tetapi ini sedikit lebih panjang, tapi mudah-mudahan akan memberi Anda pemahaman yang baik tentang filosofi di balik manajemen paket dan mengapa itu dianggap sebagai Good Thing (frasa yang biasanya ditulis dengan huruf kapital oleh pengguna Linux berarti ada sesuatu yang masuk dalam kategori barang). Jika Anda terburu-buru, Anda dapat melompat ke bagian selanjutnya yang akan memberi tahu Anda bagaimana sebenarnya menggunakan sistem paket.
	</para>
	 <para>
		Masalah dengan menjelajahi situs web vendor perangkat lunak dan mengunduh dan menginstal perangkat lunak yang mereka tawarkan banyak, seperti:
	</para>
	 <itemizedlist>
		<listitem>
			<para>
				Sulit atau tidak mungkin untuk mengetahui apakah perangkat lunak telah diuji untuk bekerja dengan sistem operasi Anda.
			</para>
		</listitem>
		 <listitem>
			<para>
				Sulit atau tidak mungkin untuk mengetahui bagaimana perangkat lunak ini akan berinteraksi dengan perangkat lunak lain yang diinstal pada sistem Anda.
			</para>
		</listitem>
		 <listitem>
			<para>
				Sulit atau tidak mungkin untuk mengetahui apakah Anda dapat mempercayai suatu perangkat lunak dari pengembang yang tidak dikenal bahwa perangkat lunak tersebut tidak akan menyebabkan kerusakan, disengaja atau lalai, ke sistem operasi Anda. Bahkan jika Anda mengenal perangkat lunak tertentu dan pengembangnya, Anda juga tidak dapat sepenuhnya yakin bahwa Anda tidak mengunduh yang dapat dieksekusi yang telah ditukar oleh pihak ketiga yang jahat untuk beberapa jenis malware.
			</para>
		</listitem>

	</itemizedlist>
	 <para>
		Lebih jauh, masalah dengan mengunduh dan menginstal banyak program yang berbeda, dari beberapa pengembang yang berbeda, tidak ada manajemen terstruktur. Sebelum Anda mengatakan "masalah besar", pertimbangkan bagaimana Anda akan memperbarui semua perangkat lunak yang berbeda ini. Jika Anda bosan dengan program dan ingin menghapusnya, bagaimana Anda tahu cara mencapainya? Program yang dimaksud mungkin tidak datang dengan opsi penghapusan, dan bahkan jika itu terjadi, sebagian besar waktu ini akan gagal untuk menghapus perangkat lunak dengan bersih dan sepenuhnya. Dalam arti yang sangat nyata, ketika Anda menjalankan program pemasang itu, Anda menyerahkan sebagian kendali Anda atas komputer Anda ke program yang seluruhnya ditulis oleh orang asing.
	</para>
	 <para>
		Akhirnya, perangkat lunak yang didistribusikan dengan cara ini berdasarkan kebutuhan, bersifat “statis”. Ini berarti bahwa Anda tidak hanya perlu mengunduh program itu sendiri, tetapi juga semua pustaka data yang diperlukan untuk menjalankannya. Karena pengembang perangkat lunak pihak ketiga tidak dapat mengetahui pustaka data mana yang mungkin sudah Anda miliki di sistem Anda, satu-satunya cara mereka dapat menjamin itu akan berjalan di sistem Anda adalah dengan memasok semua pustaka data yang dibutuhkan bersama dengan program itu sendiri. Ini berarti unduhan yang lebih besar, dan itu berarti bahwa ketika saatnya tiba untuk memperbarui perpustakaan yang diberikan, itu harus dilakukan secara terpisah untuk semua program yang menggunakannya, bukan hanya sekali. Singkatnya, distribusi perangkat lunak statis menghasilkan duplikasi yang tidak perlu dari banyak pekerjaan.
	</para>
	 <para>
		Manajemen paket di Xenta OS, dan sistem operasi GNU/Linux pada umumnya, telah ditetapkan untuk beberapa waktu dan merupakan metode yang disukai untuk mengelola perangkat lunak karena menghindari semua masalah ini. Kami telah menginstal perangkat lunak kami dengan aman dan otomatis sejak awal 1990-an.
	</para>
	 <para>
		Perangkat lunak pertama kali ditulis oleh pengembang, seperti yang Anda harapkan, dan akhir dari rantai produksi ini dikenal sebagai "upstream". Sebagai pengguna distribusi Linux, Anda disebut berada di titik terjauh yang disebut “hilir” atau pengguna (kecuali Anda adalah admin, dalam hal ini pengguna Anda adalah titik terjauh di hilir, tetapi Anda tahu itu karena Anda adalah admin ). Setelah pengembang puas dengan program atau pembaruan pada program yang mereka tulis, mereka akan merilis kode sumber untuk itu. Mereka juga akan berkomunikasi dalam dokumentasi mereka tentang perpustakaan data atau program lain yang mereka manfaatkan ketika mereka menulis program. Mereka telah melakukan ini selama beberapa waktu dan ada cara standar dan terhormat bagi mereka untuk melakukan ini. Perhatikan bahwa, dengan beberapa pengecualian (biasanya produsen perangkat keras yang merilis driver untuk Linux, seperti nVidia atau ATI, atau perusahaan besar tertentu seperti Adobe, yang dapat kami percayai) mereka merilis kode sumber aktual untuk program, yaitu, daftar instruksi dalam program itu dalam bentuk yang dapat dibaca manusia. Ini memiliki sejumlah implikasi, tetapi yang paling penting untuk diskusi ini itu berarti bahwa mereka bersedia untuk ditinjau oleh rekan perangkat lunak mereka oleh siapa saja dan semua orang dengan koneksi internet. Sangat sulit untuk menyelinap spyware ke dalam program Anda ketika Anda membiarkan semua orang melihat apa yang Anda tulis!
	</para>
	 <para>
		Perangkat lunak sekarang bergerak ke aliran sungai ke pengelola paket, yang merupakan sukarelawan atau karyawan yang dibayar yang bekerja untuk distribusi Linux. Merupakan tanggung jawab mereka untuk mengkompilasi kode sumber untuk perangkat lunak, mengujinya pada distribusi untuk memastikan bahwa itu berfungsi, menyelesaikan masalah yang mereka hadapi dan akhirnya mengemas perangkat lunak yang dikompilasi (mis., Dapat dibaca mesin) dalam format yang nyaman. Paket ini berisi program yang dapat dieksekusi, file konfigurasinya, dan instruksi yang diperlukan perangkat lunak manajemen paket untuk menginstalnya dengan sukses. Perhatikan bahwa biasanya tidak akan berisi pustaka statis, karena tidak perlu - pustaka disediakan oleh paket lain, dan karenanya dikenal sebagai pustaka bersama. Perangkat lunak manajemen paket Anda akan tahu apakah suatu paket tertentu memerlukan paket lain untuk diinstal terlebih dahulu (seperti perpustakaan bersama), karena, seperti yang Anda ingat, pustaka data dan paket terkait yang diperlukan untuk perangkat lunak untuk bekerja dinyatakan lebih jauh ke hulu dan bahwa informasi termasuk dalam paket. Instruksi cukup rinci bahwa bahkan versi spesifik dari paket lain dapat diminta untuk memastikan interoperabilitas. Paket yang sudah selesai kemudian diunggah ke server file khusus, yang disebut repositori perangkat lunak.
	</para>
	 <para>
		It is from that single location that you are able to download and install the software you need. You will know that the location is bona fide, because it is signed with a certificate that your package manager will check. You will also know that each individual package that you install is secure, because each package is itself signed by a GPG key, which your package manager will also check. Your package manager will even run an MD5 sum on each package to make sure that nothing went wrong when it was downloading, just like we did before with the LiveDVD iso. Notice how it's doing all of this for you. You're just sitting back, sipping a martini, and chatting in #linuxmint on xchat. The package manager has downloaded the packages you have selected, it will follow, to the letter (computers are fastidious in following instructions), the instructions in the package to perfectly install your software, and all of its dependencies, in the right order. There is no space for human error – if the package worked on the maintainer's computer, then it ought to on yours because the package manager will follow exactly the same procedure.
	</para>
	 <para>
		Ketika tiba saatnya memeriksa pembaruan perangkat lunak, manajer paket Anda akan secara otomatis membandingkan versi perangkat lunak yang Anda miliki dengan apa saja yang tersedia di repositori, dan melakukan semua pekerjaan yang diperlukan untuk menjaga sistem Anda berjalan dengan lancar dan aman. Jadi, jika versi 2.4 dari BestSoft diunggah ke repositori, dan Anda memiliki versi 2.3, manajer paket akan membandingkan nomor-nomor versi itu, dan menawarkan untuk menginstal versi terbaru, berhati-hati, tentu saja, dari semua dependensi untuk versi yang lebih baru perangkat lunak.
	</para>
	 <para>
		Kedengarannya cukup bagus bukan? Ya ini menjadi lebih baik.
	</para>
	 <para>
		Manusia keliru di mana komputer tidak dan dari waktu ke waktu ada sesuatu yang salah dalam proses ini. Mungkin Anda akan, secara tidak sengaja, menginstal driver perangkat keras untuk bagian perangkat keras yang salah dan ini dapat merusak sesuatu. Kita semua sudah melakukannya. Atau mungkin ada bug atau fitur favorit Anda dihapus oleh pengembang program karena suatu alasan. Masalah-masalah ini menunjukkan, secara paradoks, kekuatan dan keamanan manajemen paket. Karena manajer paket Anda menyimpan catatan yang cerdik dari semua yang pernah dilakukannya, ia dapat membalikkan instalasi, dengan bersih dan sepenuhnya. Ini akan memastikan bahwa menghapus satu paket tidak merusak yang lain, dan Anda bahkan dapat mengatakannya secara khusus untuk melakukan hal-hal seperti tidak secara otomatis meningkatkan paket-paket tertentu, karena Anda menyukainya seperti adanya, atau untuk kembali ke versi sebelumnya. Akhirnya, seluruh proses ini sangat ditinjau oleh rekan sejawat. Karena Anda adalah bagian dari komunitas besar pengguna Linux, semua menggunakan repositori yang sama untuk mendapatkan perangkat lunak mereka, jika ada yang salah, Anda dapat benar-benar yakin akan ada keributan besar tentang hal itu, dan bahwa masalahnya akan diselesaikan dengan cepat! Dengan cara ini, distribusi perangkat lunak dalam distribusi GNU / Linux sangat didasarkan pada kepercayaan, mulai dari saat pengembang asli menampilkan kode sumber mereka untuk dilihat semua orang, hingga diskusi terbuka di situs web distribusi. Anda dapat percaya diri pada perangkat lunak yang Anda peroleh, bukan hanya karena protokol keamanan yang telah disebutkan, tetapi karena jika ada kesalahan, semua orang akan membicarakannya!
	</para>
	 <para>
		Mari kita lihat lagi daftar masalah kita dan lihat apa yang telah kita pecahkan:
	</para>
	 <table>
		<title></title>
		 <tgroup align="left" cols="2" colsep="1" rowsep="1">
			<thead>
				<row>
					<entry>
						Masalah
					</entry>
					 <entry>
						Solusi
					</entry>

				</row>

			</thead>
			 <tbody>
				<row>
					<entry>
						Sulit atau tidak mungkin untuk mengetahui apakah perangkat lunak telah diuji untuk bekerja dengan sistem operasi Anda.
					</entry>
					 <entry>
						Anda tahu bahwa perangkat lunak yang tersedia untuk Anda melalui repositori telah diuji secara menyeluruh oleh pengelola paket dan tim pengujian untuk bekerja dengan sistem operasi Anda. Mereka tidak ingin salah, sebagian besar berdasarkan prinsip, tetapi juga karena jika mereka melakukannya mereka akan segera mendapatkan banyak email.
					</entry>

				</row>
				 <row>
					<entry>
						Sulit atau tidak mungkin untuk mengetahui bagaimana perangkat lunak ini akan berinteraksi dengan perangkat lunak lain yang diinstal pada sistem Anda.
					</entry>
					 <entry>
						Demikian pula, pengelola paket berusaha semaksimal mungkin untuk memastikan bahwa paket tidak akan bertentangan dengan paket lain yang ditawarkan oleh distribusi mereka. Tentu saja, mereka mungkin tidak memiliki setiap paket terakhir yang diinstal pada mesin pengujian mereka (pada kenyataannya, biasanya pengelola paket membangun paket mereka pada instalasi yang bersih untuk memastikan bahwa mereka standar), tetapi jika anggota komunitas pengguna mengetahui bahwa ada masalah, mereka tidak akan ragu membiarkan tim distribusi tahu, dan masalah akan diperbaiki, atau setidaknya dikerjakan. Kecuali Anda seorang penguji beta, maka Anda tidak akan pernah melihat konflik seperti itu, karena itulah gunanya pengujian beta.
					</entry>

				</row>
				 <row>
					<entry>
						Sulit atau tidak mungkin untuk mengetahui apakah Anda dapat menaruh kepercayaan pada pengembang bahwa perangkat lunak mereka tidak akan menyebabkan kerusakan, disengaja atau lalai, ke sistem Anda.
					</entry>
					 <entry>
						Pengelola paket hampir tidak mungkin mengemas perangkat lunak yang mereka tahu akan membahayakan komputer orang (termasuk milik mereka)! Hanya perangkat lunak yang dikenal dan tepercaya yang akan berhasil sampai ke repositori.
					</entry>

				</row>
				 <row>
					<entry>
						Bahkan jika Anda tahu tentang perangkat lunak tertentu dan pengembangnya, Anda tidak dapat sepenuhnya yakin bahwa Anda tidak mengunduh file yang dapat dieksekusi yang telah ditukar oleh pihak ketiga yang jahat untuk beberapa jenis malware.
					</entry>
					 <entry>
						Selain langkah-langkah keamanan yang biasa dilakukan oleh lembaga yang memiliki server (biasanya lembaga akademik atau penelitian bergengsi, atau perusahaan besar), repositori dan paket itu sendiri dijamin dengan sertifikat dan kunci GPG. Jika ada yang tidak beres, manajer paket Anda akan memberi tahu Anda tentang hal itu. Penulis saat ini, dalam sepuluh tahun menggunakan Linux, tidak pernah sekalipun tahu ada yang salah dalam hal ini (penulis merupakan tim developer Linux Mint, disini Saya hanya membantu menerjemahkan ke bahasa Indonesia).
					</entry>

				</row>
				 <row>
					<entry>
						Sulit untuk menghapus (semua jejak) program yang diinstal.
					</entry>
					 <entry>
						Karena perangkat lunak manajemen paket menyimpan catatan lengkap dari semua tindakannya, itu cukup mampu membalikkan setiap langkah yang diambilnya di masa lalu, sambil memastikan bahwa menghapus satu paket tidak akan menyebabkan paket lain gagal.
					</entry>

				</row>
				 <row>
					<entry>
						Paket statis yang besar dan asing.
					</entry>
					 <entry>
						Karena Anda menggunakan manajemen paket, Anda hanya akan mengunduh pustaka statis ketika tidak ada alternatif bersama. Jika Anda memerlukan pustaka data bersama baru untuk menginstal program yang diberikan, manajer paket Anda akan mengetahui ini dan menginstalnya untuk Anda secara otomatis. Anda hanya perlu mengunduh perpustakaan bersama sekali karena, ya, itu dibagikan oleh semua program yang membutuhkannya. Jika Anda akhirnya menghapus paket terakhir yang membutuhkan pustaka bersama, maka perangkat lunak manajemen paket juga akan menghapusnya. Tetapi, jika Anda memutuskan bahwa Anda memang ingin menyimpan objek yang dibagikan, mungkin karena Anda baru tahu Anda akan membutuhkannya nanti, maka Anda dapat memberi tahu perangkat lunak manajemen paket untuk melakukannya juga.
					</entry>

				</row>
				 <row>
					<entry>
						Saya masih belum yakin.
					</entry>
					 <entry>
						Baik! Posting pesan di forum tentang hal itu jika Anda memiliki kepedulian yang tulus tentang manajemen paket, atau untuk bertanya tentang pengalaman orang lain. Perlu diulang bahwa metode paket distribusi di GNU/Linux bergantung pada kepercayaan, jadi jika ada masalah, kami ingin mendengarnya!
					</entry>

				</row>

			</tbody>

		</tgroup>

	</table>
	 <para>
		Kata terakhir. Anda mungkin telah mengalami rumor tentang efek bahwa Linux belum selesai, atau bahwa jika Anda menggunakan Linux maka Anda adalah beta-tester, atau perangkat lunak Linux tidak stabil. Ini semua setengah kebenaran. "Linux" tidak akan pernah "selesai", lebih dari sistem operasi utama lainnya dapat dianggap "selesai". Dari kernel Linux hingga karya seni di layar Anda, semua elemen sistem operasi Anda akan selalu berada di bawah semacam pengembangan. Ini karena programmer bekerja keras untuk membuat kita tetap up to date dengan perkembangan terbaru dalam pemrograman dan teknologi perangkat keras. Ini tidak berarti bahwa perangkat lunak yang tersedia untuk Anda gunakan memiliki kualitas buruk. Sistem dasar pada inti Xenta OS telah dalam pengembangan berat selama sekitar dua dekade sekarang, dan sangat matang, stabil, dan terbukti. Walaupun pasti ada versi yang tidak stabil dari sebagian besar perangkat lunak pada sistem operasi Anda, Anda tidak akan menggunakannya karena Anda bukan penguji beta. Anda tahu Anda bukan penguji beta, karena Anda membaca ini. Perangkat lunak yang tersedia untuk Anda di repositori yang Anda gunakan akan selalu stabil dan teruji dengan baik, kecuali jika Anda mengubah repositori itu ke yang digunakan oleh penguji (dalam hal ini selamat, Anda baru saja menjadi tester). Ini sedikit tidak punya otak, sungguh.
	</para>
	 <para>
		Jadi, untuk meringkas dengan contoh, ketika Anda menginstal Opera, Real Player atau Google Earth di Xenta OS, aplikasi ini tidak berasal dari pengembang aslinya (Opera, Real, dan Google). Tentu saja aplikasi hulu berasal dari para pengembang ini, tetapi hanya setelah mereka telah dikemas dan diuji dengan benar, mereka tersedia untuk Anda. Jadi, dengan kata lain, Anda tidak perlu pergi dan menjelajah Internet untuk mencari perangkat lunak, karena semua yang Anda butuhkan tersedia dan sudah diuji untuk Anda dan untuk sistem Anda oleh Xenta OS dan tim Ubuntu. Yang perlu Anda lakukan adalah memilih apa yang ingin Anda lakukan.
	</para>
	 <para>
		Xenta OS akan memperbarui dirinya secara otomatis melalui alat yang disebut Update Manager, yang tidak hanya akan memperbarui sistem operasi dasar, tetapi semua perangkat lunak yang diinstal pada mesin Anda juga.
	</para>
	 <para>
		Sesederhana itu. Wah!
	</para>
	 <sect1> <title>Menginstal Perangkat Lunak</title>
	 <para>
		Beberapa aplikasi paling populer yang tidak diinstal secara default di Xenta OS adalah Skype, Acrobat Reader, Google Earth dan Real Player.
	</para>
	 <sect2> <title>Menggunakan Manajer Perangkat Lunak</title>
	 <para>
		Cara termudah untuk menginstal perangkat lunak di Xenta OS adalah dengan menggunakan <wordasword>Manajer Perangkat Lunak</wordasword>.
	</para>
	 <figure id="software-mintinstall">
		<title>Manajer Perangkat Lunak</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_mintinstall.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 <para>
		Silahkan buka <guimenu>Menu</guimenu> dan silahkan pilih <guimenuitem>Manajer Perangkat Lunak</guimenuitem>.
	</para>
	 <para>
		Manajer Perangkat Lunak memungkinkan Anda menjelajahi perangkat lunak yang disediakan untuk Xenta OS. Anda dapat menelusuri berdasarkan kategori, mencari berdasarkan kata kunci atau mengurutkan perangkat lunak berdasarkan peringkat dan popularitas.
	</para>
	 </sect2> <sect2> <title>Menggunakan Synaptic</title>
	 <para>
		Jika Anda ingin menginstal lebih dari satu aplikasi sekaligus atau melihat informasi teknis lebih lanjut tentang paket, Anda dapat menggunakan <wordasword>Synaptic</wordasword>.
	</para>
	 <figure id="software-synaptic">
		<title>Synaptic, Merupakan Pengelola Paket</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_synaptic.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 <para>
		Silahkan buka <guimenu>Menu</guimenu> dan silahkan pilih <guimenuitem>Synaptic Package Manager</guimenuitem>.
	</para>
	 <para>
		Mari kita lihat bagaimana kita dapat menginstal Opera (sebuah alternatif untuk browser Web Firefox):
	</para>
	 <itemizedlist>
		<listitem>
			<para>
				Click on the <guibutton>Search</guibutton> button and type <wordasword>opera</wordasword>.
			</para>
		</listitem>
		 <listitem>
			<para>
				Go through the list of packages and find the one corresponding to the Opera Web Browser.
			</para>
		</listitem>
		 <listitem>
			<para>
				Tick the box and select <guimenuitem>Mark for Installation</guimenuitem>.
			</para>
		</listitem>
		 <listitem>
			<para>
				Click on the <guibutton>Apply</guibutton> button.
			</para>
		</listitem>

	</itemizedlist>
	 </sect2> <sect2> <title>Using APT</title>
	 <para>
		APT is by far the most powerful package management tool in Xenta OS. Yet it's extremely simple to use.
	</para>
	 <para>
		It's a command though, not a program with a graphical interface. If you're starting with Linux you'll probably prefer the Software Manager or Synaptic at first. As time goes on you'll likely enjoy things to be faster and more efficient.
	</para>
	 <para>
		Now let's see how we could have installed Opera using the APT command line tool.
	</para>
	 <para>
		Open the <guimenu>Menu</guimenu> and select <guimenuitem>Terminal</guimenuitem>. Then type the following command:
	</para>
	 
<screen>
                    <command>apt install <replaceable>opera</replaceable></command>
</screen>
	 <note>
		<para>
			Make sure Synaptic is closed before using APT. Synaptic is using APT in the background so both can't run at the same time. The same goes for the Software Manager.
		</para>
	</note>
	 </sect2> </sect1> <sect1 id="software-removal"> <title>Removing software</title>
	 <para>
	</para>
	 <sect2> <title>Using the Software Manager</title>
	 <para>
		You can use the Software Manager to remove software. Simply find the software you want to remove and click on <guibutton>Remove</guibutton>.
	</para>
	 </sect2> <sect2> <title>Using Synaptic</title>
	 <para>
		With Synaptic, you can remove packages by clicking on them and by selecting <guimenuitem>Mark for Removal</guimenuitem>. Changes are applied after you click on the <guibutton>Apply</guibutton> button.
	</para>
	 </sect2> <sect2> <title>Using APT</title>
	 <para>
		With APT it's even simpler... say you want to remove Opera, open a <guimenuitem>Terminal</guimenuitem> from the <guimenu>Menu</guimenu> and type:
	</para>
	 
<screen>
                    <command>apt remove <replaceable>opera</replaceable></command>
</screen>
	 </sect2> </sect1> <sect1 id="software-updates"> <title>Updating software</title>
	 <para>
		If a new version of any package installed on your computer is made available you can upgrade to it. It may be a security update for some component of the operating system, it may be an optimization in one specific library or it may even be a newer version of Firefox. Basically, your system is made of packages and any part of it can be updated by updating some of those packages. This means replacing the current package with a newer version.
	</para>
	 <para>
		There are many ways to do this but only one of them is recommended.
	</para>
	 <para>
		You could use APT to upgrade all your packages with one simple command (<command>apt upgrade</command>) but we recommend you don't do so. The reason is that it doesn't make any distinctions in selecting which updates to apply and assumes that you want all of them.
	</para>
	 <para>
		Some parts of the system are safe to update and some others aren't. For instance, by updating your kernel (the part which is responsible among other things for hardware recognition) you might break your sound support, your wireless card support or even some applications (such as VMWare and Virtualbox) which are closely linked to the kernel.
	</para>
	 <para>
		Xenta OS comes with a tool called the Update Manager. It gives more information about updates and lets you define how safe an update must be before you want to apply it. It looks like a shield and sits on the bottom-right corner of your screen.
	</para>
	 <para>
		If you place your mouse pointer on top of it, it will tell you either that your system is up to date or, if it isn't, how many updates are available.
	</para>
	 <figure id="software-list">
		<title>The list of available updates</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_list.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 <para>
		If you click on the lock icon, the Update Manager opens and shows you the updates that are available. The interface is very easy to use. For each package update you can read the description, the changelog (this is where developers explain their changes when they modify the package), and eventually if Xenta OS assigned warnings or extra information about the updates. You can also see which version is currently installed on your computer and which version is available for you to update to. Also you have a symbol showing if it's a package update or a security update.
	</para>
	 <para>
		Finally, you can see the stability level assigned to the package update. Each package update brings improvements or fixes security issues but that doesn't mean they're risk-free and can't introduce new bugs. The stability level is assigned to each package by Xenta OS and gives you an indication of how safe it is for you to apply an update.
	</para>
	 <para>
		Of course you can click on the columns to sort by stability level, status, package name or by version. You can select all updates or unselect all of them by using the <guibutton>Clear</guibutton> and <guibutton>Select All</guibutton> buttons.
	</para>
	 <para>
		Level 1 and Level 2 updates are risk-free and you should always apply them. Level 3 updates should be safe but, although we recommend you take them, make sure you look over them on the list of updates. If you experience a problem with a particular Level 3 update, tell the Xenta OS development team so they can take measures to make that update a Level 4 or a Level 5 so as to warn or even discourage others against applying it.
	</para>
	 <figure id="software-prefs">
		<title>The Update Manager preferences</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_prefs.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 <para>
		If you click on the <guibutton>Preferences</guibutton> button you should see the screen above. By default the Update Manager tells you about Level 1, 2 and 3 updates. You can decide to make Level 4 and 5 <guilabel>visible</guilabel>. This will make more updates appear in the list. If you want to you can even make Level 4 and 5 updates <guilabel>safe</guilabel> (although this is not recommended). This will cause them to be selected by default within the Update Manager.
	</para>
	 <para>
		The Update Manager only counts 'safe' updates. So when it tells you your system is up to date, it means there are no updates available assigned with a level that you defined as being 'safe'.
	</para>
	 <para>
		The Update Manager only shows 'visible' updates in the list.
	</para>
	 <para>
		For example, if you made all levels 'visible' and only Level 1 and 2 'safe', you would see a lot of updates in the list, but the Update Manager would probably tell you that your system was up to date.
	</para>
	 <para>
		The <guilabel>Auto-Refresh</guilabel> tab allows you to define how often the Update Manager checks for updates.
	</para>
	 <para>
		The <guilabel>Update Method</guilabel> tab lets you define how the Update Manager checks for new updates.
	</para>
	 <para>
		The <guilabel>Include dist-upgrade packages</guilabel> option allows you to define whether the Update Manager should install new dependencies or not. For instance if package A version 1 was installed on your computer and package A version 2 became available, but version 2 had a new dependency on package B which isn't installed on your computer... what would happen?
	</para>
	 <itemizedlist>
		<listitem>
			<para>
				If you left this checkbox unchecked, version 2 would not appear as an update in the list of updates.
			</para>
		</listitem>
		 <listitem>
			<para>
				If you checked this checkbox, it would, and if selected it would install package B as a dependency.
			</para>
		</listitem>

	</itemizedlist>
	 <para>
		Be careful with this option as dependency can install new packages on your behalf but they can also sometimes remove packages you already have installed.
	</para>
	 <para>
		In the <guilabel>Ignored packages</guilabel> tab you can define packages for which you do not want to receive updates. '?' and '*' wildcard characters are supported.
	</para>
	 <para>
		The <guilabel>Proxy</guilabel> tab lets you define proxy settings.
	</para>
	 <para>
		The last tab lets you change the icons used by the Update Manager in the system tray.
	</para>
	 <para>
		If you get errors with the Update Manager, you can check the logs. Right click on the lock icon in the system tray and select <guilabel>Information</guilabel>. The following screen appears:
	</para>
	 <figure id="software-logs">
		<title>The Update Manager logs</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_logs.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 <para>
		In this screen you can see the process ID of the Update Manager and the content of its log file.
	</para>
	 <para>
		You can also review the updates that were applied on your system by clicking on the <guimenu>View</guimenu> menu and by selecting <guimenuitem>History of Updates</guimenuitem>.
	</para>
	 <figure id="software-history">
		<title>The history of updates</title>
		 <screenshot> <mediaobject>
			<imageobject>
				<imagedata fileref="images/softwaremanagement_history.png" format="PNG" width="100%" />
			</imageobject>

		</mediaobject>
		 </screenshot>
	</figure>
	 </sect1>
</chapter>

